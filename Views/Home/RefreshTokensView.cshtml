@{
    // View
    View = this;

    // Check action result
    if (refreshTokensView.ActionResult is EmptyResult) // Terminate page
        return;

    // Layout
    Layout = refreshTokensView.UseLayout ? "_Layout" : "";
}
@if (!refreshTokensView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @refreshTokensView.ExportOptions.RenderBody()
    @refreshTokensView.OtherOptions.RenderBody()
</div>
}
@refreshTokensView.ShowPageHeader()
@refreshTokensView.ShowMessages()
<main class="view">
<form name="fRefreshTokensview" id="fRefreshTokensview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!refreshTokensView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(refreshTokensView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { RefreshTokens: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fRefreshTokensview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fRefreshTokensview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (CurrentPage?.CheckToken ?? false) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(refreshTokensView.IsModal)">
<table class="@(refreshTokensView.TableClass)">
@if (refreshTokensView.Id.Visible) { // refreshTokensView.Id.Visible (begin)
    <tr id="r_Id" @Html.Raw(refreshTokensView.Id.RowAttributes)>
        <td class="@(refreshTokensView.TableLeftColumnClass)"><span id="elh_RefreshTokens_Id">@Html.Raw(refreshTokensView.Id.Caption)</span></td>
        <td data-name="Id" @Html.Raw(refreshTokensView.Id.CellAttributes)>
<span id="el_RefreshTokens_Id">
<span @Html.Raw(refreshTokensView.Id.ViewAttributes)>
@Html.Raw(refreshTokensView.Id.GetViewValue())</span>
</span></td>
    </tr>
} @* refreshTokensView.Id.Visible (end) *@
@if (refreshTokensView.UserId.Visible) { // refreshTokensView.UserId.Visible (begin)
    <tr id="r_UserId" @Html.Raw(refreshTokensView.UserId.RowAttributes)>
        <td class="@(refreshTokensView.TableLeftColumnClass)"><span id="elh_RefreshTokens_UserId">@Html.Raw(refreshTokensView.UserId.Caption)</span></td>
        <td data-name="UserId" @Html.Raw(refreshTokensView.UserId.CellAttributes)>
<span id="el_RefreshTokens_UserId">
<span @Html.Raw(refreshTokensView.UserId.ViewAttributes)>
@Html.Raw(refreshTokensView.UserId.GetViewValue())</span>
</span></td>
    </tr>
} @* refreshTokensView.UserId.Visible (end) *@
@if (refreshTokensView._Token.Visible) { // refreshTokensView._Token.Visible (begin)
    <tr id="r__Token" @Html.Raw(refreshTokensView._Token.RowAttributes)>
        <td class="@(refreshTokensView.TableLeftColumnClass)"><span id="elh_RefreshTokens__Token">@Html.Raw(refreshTokensView._Token.Caption)</span></td>
        <td data-name="_Token" @Html.Raw(refreshTokensView._Token.CellAttributes)>
<span id="el_RefreshTokens__Token">
<span @Html.Raw(refreshTokensView._Token.ViewAttributes)>
@Html.Raw(refreshTokensView._Token.GetViewValue())</span>
</span></td>
    </tr>
} @* refreshTokensView._Token.Visible (end) *@
@if (refreshTokensView.ExpiryDate.Visible) { // refreshTokensView.ExpiryDate.Visible (begin)
    <tr id="r_ExpiryDate" @Html.Raw(refreshTokensView.ExpiryDate.RowAttributes)>
        <td class="@(refreshTokensView.TableLeftColumnClass)"><span id="elh_RefreshTokens_ExpiryDate">@Html.Raw(refreshTokensView.ExpiryDate.Caption)</span></td>
        <td data-name="ExpiryDate" @Html.Raw(refreshTokensView.ExpiryDate.CellAttributes)>
<span id="el_RefreshTokens_ExpiryDate">
<span @Html.Raw(refreshTokensView.ExpiryDate.ViewAttributes)>
@Html.Raw(refreshTokensView.ExpiryDate.GetViewValue())</span>
</span></td>
    </tr>
} @* refreshTokensView.ExpiryDate.Visible (end) *@
</table>
@{ refreshTokensView.CloseRecordset(); }
</form>
</main>
@refreshTokensView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!refreshTokensView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
