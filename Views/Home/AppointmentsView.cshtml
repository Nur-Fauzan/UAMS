@{
    // View
    View = this;

    // Check action result
    if (appointmentsView.ActionResult is EmptyResult) // Terminate page
        return;

    // Layout
    Layout = appointmentsView.UseLayout ? "_Layout" : "";
}
@if (!appointmentsView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @appointmentsView.ExportOptions.RenderBody()
    @appointmentsView.OtherOptions.RenderBody()
</div>
}
@appointmentsView.ShowPageHeader()
@appointmentsView.ShowMessages()
<main class="view">
<form name="fAppointmentsview" id="fAppointmentsview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!appointmentsView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(appointmentsView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Appointments: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fAppointmentsview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fAppointmentsview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (CurrentPage?.CheckToken ?? false) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(appointmentsView.IsModal)">
<table class="@(appointmentsView.TableClass)">
@if (appointmentsView.Id.Visible) { // appointmentsView.Id.Visible (begin)
    <tr id="r_Id" @Html.Raw(appointmentsView.Id.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments_Id">@Html.Raw(appointmentsView.Id.Caption)</span></td>
        <td data-name="Id" @Html.Raw(appointmentsView.Id.CellAttributes)>
<span id="el_Appointments_Id">
<span @Html.Raw(appointmentsView.Id.ViewAttributes)>
@Html.Raw(appointmentsView.Id.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView.Id.Visible (end) *@
@if (appointmentsView._Title.Visible) { // appointmentsView._Title.Visible (begin)
    <tr id="r__Title" @Html.Raw(appointmentsView._Title.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments__Title">@Html.Raw(appointmentsView._Title.Caption)</span></td>
        <td data-name="_Title" @Html.Raw(appointmentsView._Title.CellAttributes)>
<span id="el_Appointments__Title">
<span @Html.Raw(appointmentsView._Title.ViewAttributes)>
@Html.Raw(appointmentsView._Title.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView._Title.Visible (end) *@
@if (appointmentsView.Description.Visible) { // appointmentsView.Description.Visible (begin)
    <tr id="r_Description" @Html.Raw(appointmentsView.Description.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments_Description">@Html.Raw(appointmentsView.Description.Caption)</span></td>
        <td data-name="Description" @Html.Raw(appointmentsView.Description.CellAttributes)>
<span id="el_Appointments_Description">
<span @Html.Raw(appointmentsView.Description.ViewAttributes)>
@Html.Raw(appointmentsView.Description.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView.Description.Visible (end) *@
@if (appointmentsView._StartTime.Visible) { // appointmentsView._StartTime.Visible (begin)
    <tr id="r__StartTime" @Html.Raw(appointmentsView._StartTime.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments__StartTime">@Html.Raw(appointmentsView._StartTime.Caption)</span></td>
        <td data-name="_StartTime" @Html.Raw(appointmentsView._StartTime.CellAttributes)>
<span id="el_Appointments__StartTime">
<span @Html.Raw(appointmentsView._StartTime.ViewAttributes)>
@Html.Raw(appointmentsView._StartTime.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView._StartTime.Visible (end) *@
@if (appointmentsView.EndTime.Visible) { // appointmentsView.EndTime.Visible (begin)
    <tr id="r_EndTime" @Html.Raw(appointmentsView.EndTime.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments_EndTime">@Html.Raw(appointmentsView.EndTime.Caption)</span></td>
        <td data-name="EndTime" @Html.Raw(appointmentsView.EndTime.CellAttributes)>
<span id="el_Appointments_EndTime">
<span @Html.Raw(appointmentsView.EndTime.ViewAttributes)>
@Html.Raw(appointmentsView.EndTime.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView.EndTime.Visible (end) *@
@if (appointmentsView.CreatedBy.Visible) { // appointmentsView.CreatedBy.Visible (begin)
    <tr id="r_CreatedBy" @Html.Raw(appointmentsView.CreatedBy.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments_CreatedBy">@Html.Raw(appointmentsView.CreatedBy.Caption)</span></td>
        <td data-name="CreatedBy" @Html.Raw(appointmentsView.CreatedBy.CellAttributes)>
<span id="el_Appointments_CreatedBy">
<span @Html.Raw(appointmentsView.CreatedBy.ViewAttributes)>
@Html.Raw(appointmentsView.CreatedBy.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView.CreatedBy.Visible (end) *@
@if (appointmentsView.Timezone.Visible) { // appointmentsView.Timezone.Visible (begin)
    <tr id="r_Timezone" @Html.Raw(appointmentsView.Timezone.RowAttributes)>
        <td class="@(appointmentsView.TableLeftColumnClass)"><span id="elh_Appointments_Timezone">@Html.Raw(appointmentsView.Timezone.Caption)</span></td>
        <td data-name="Timezone" @Html.Raw(appointmentsView.Timezone.CellAttributes)>
<span id="el_Appointments_Timezone">
<span @Html.Raw(appointmentsView.Timezone.ViewAttributes)>
@Html.Raw(appointmentsView.Timezone.GetViewValue())</span>
</span></td>
    </tr>
} @* appointmentsView.Timezone.Visible (end) *@
</table>
@{ appointmentsView.CloseRecordset(); }
</form>
</main>
@appointmentsView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!appointmentsView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
