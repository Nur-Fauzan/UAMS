@{
    // View
    View = this;

    // Check action result
    if (usersView.ActionResult is EmptyResult) // Terminate page
        return;

    // Layout
    Layout = usersView.UseLayout ? "_Layout" : "";
}
@if (!usersView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @usersView.ExportOptions.RenderBody()
    @usersView.OtherOptions.RenderBody()
</div>
}
@usersView.ShowPageHeader()
@usersView.ShowMessages()
<main class="view">
<form name="fUsersview" id="fUsersview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!usersView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(usersView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Users: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fUsersview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fUsersview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (CurrentPage?.CheckToken ?? false) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(usersView.IsModal)">
<table class="@(usersView.TableClass)">
@if (usersView._Username.Visible) { // usersView._Username.Visible (begin)
    <tr id="r__Username" @Html.Raw(usersView._Username.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_Users__Username">@Html.Raw(usersView._Username.Caption)</span></td>
        <td data-name="_Username" @Html.Raw(usersView._Username.CellAttributes)>
<span id="el_Users__Username">
<span @Html.Raw(usersView._Username.ViewAttributes)>
@Html.Raw(usersView._Username.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView._Username.Visible (end) *@
@if (usersView.PasswordHash.Visible) { // usersView.PasswordHash.Visible (begin)
    <tr id="r_PasswordHash" @Html.Raw(usersView.PasswordHash.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_Users_PasswordHash">@Html.Raw(usersView.PasswordHash.Caption)</span></td>
        <td data-name="PasswordHash" @Html.Raw(usersView.PasswordHash.CellAttributes)>
<span id="el_Users_PasswordHash">
<span @Html.Raw(usersView.PasswordHash.ViewAttributes)>
@Html.Raw(usersView.PasswordHash.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView.PasswordHash.Visible (end) *@
@if (usersView._Name.Visible) { // usersView._Name.Visible (begin)
    <tr id="r__Name" @Html.Raw(usersView._Name.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_Users__Name">@Html.Raw(usersView._Name.Caption)</span></td>
        <td data-name="_Name" @Html.Raw(usersView._Name.CellAttributes)>
<span id="el_Users__Name">
<span @Html.Raw(usersView._Name.ViewAttributes)>
@Html.Raw(usersView._Name.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView._Name.Visible (end) *@
@if (usersView.PreferredTimezoneID.Visible) { // usersView.PreferredTimezoneID.Visible (begin)
    <tr id="r_PreferredTimezoneID" @Html.Raw(usersView.PreferredTimezoneID.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_Users_PreferredTimezoneID">@Html.Raw(usersView.PreferredTimezoneID.Caption)</span></td>
        <td data-name="PreferredTimezoneID" @Html.Raw(usersView.PreferredTimezoneID.CellAttributes)>
<span id="el_Users_PreferredTimezoneID">
<span @Html.Raw(usersView.PreferredTimezoneID.ViewAttributes)>
@Html.Raw(usersView.PreferredTimezoneID.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView.PreferredTimezoneID.Visible (end) *@
@if (usersView.UserLevelID.Visible) { // usersView.UserLevelID.Visible (begin)
    <tr id="r_UserLevelID" @Html.Raw(usersView.UserLevelID.RowAttributes)>
        <td class="@(usersView.TableLeftColumnClass)"><span id="elh_Users_UserLevelID">@Html.Raw(usersView.UserLevelID.Caption)</span></td>
        <td data-name="UserLevelID" @Html.Raw(usersView.UserLevelID.CellAttributes)>
<span id="el_Users_UserLevelID">
<span @Html.Raw(usersView.UserLevelID.ViewAttributes)>
@Html.Raw(usersView.UserLevelID.GetViewValue())</span>
</span></td>
    </tr>
} @* usersView.UserLevelID.Visible (end) *@
</table>
@{ usersView.CloseRecordset(); }
</form>
</main>
@usersView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!usersView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
