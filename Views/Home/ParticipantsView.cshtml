@{
    // View
    View = this;

    // Check action result
    if (participantsView.ActionResult is EmptyResult) // Terminate page
        return;

    // Layout
    Layout = participantsView.UseLayout ? "_Layout" : "";
}
@if (!participantsView.IsExport()) {
<div class="btn-toolbar ew-toolbar">
    @participantsView.ExportOptions.RenderBody()
    @participantsView.OtherOptions.RenderBody()
</div>
}
@participantsView.ShowPageHeader()
@participantsView.ShowMessages()
<main class="view">
<form name="fParticipantsview" id="fParticipantsview" class="ew-form ew-view-form overlay-wrapper" action="@AppPath(CurrentPageName())" method="post" novalidate autocomplete="off">
@if (!participantsView.IsExport()) {
<script>
var currentTable = @Html.Raw(ConvertToJson(participantsView.ToClientVar()));
ew.deepAssign(ew.vars, { tables: { Participants: currentTable } });
var currentPageID = ew.PAGE_ID = "view";
var currentForm;
var fParticipantsview;
loadjs.ready(["wrapper", "head"], function () {
    let $ = jQuery;
    let fields = currentTable.fields;

    // Form object
    let form = new ew.FormBuilder()
        .setId("fParticipantsview")
        .setPageId("view")
        .build();
    window[form.id] = form;
    currentForm = form;
    loadjs.done(form.id);
});
</script>
<script>
loadjs.ready("head", function() {
    // Write your client script here, no need to add script tags.
});
</script>
}
@if (CurrentPage?.CheckToken ?? false) {
    <input type="hidden" name="@Config.TokenNameKey" value="@Config.TokenName"><!-- CSRF token name -->
    @Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(participantsView.IsModal)">
<table class="@(participantsView.TableClass)">
@if (participantsView.Id.Visible) { // participantsView.Id.Visible (begin)
    <tr id="r_Id" @Html.Raw(participantsView.Id.RowAttributes)>
        <td class="@(participantsView.TableLeftColumnClass)"><span id="elh_Participants_Id">@Html.Raw(participantsView.Id.Caption)</span></td>
        <td data-name="Id" @Html.Raw(participantsView.Id.CellAttributes)>
<span id="el_Participants_Id">
<span @Html.Raw(participantsView.Id.ViewAttributes)>
@Html.Raw(participantsView.Id.GetViewValue())</span>
</span></td>
    </tr>
} @* participantsView.Id.Visible (end) *@
@if (participantsView.UserId.Visible) { // participantsView.UserId.Visible (begin)
    <tr id="r_UserId" @Html.Raw(participantsView.UserId.RowAttributes)>
        <td class="@(participantsView.TableLeftColumnClass)"><span id="elh_Participants_UserId">@Html.Raw(participantsView.UserId.Caption)</span></td>
        <td data-name="UserId" @Html.Raw(participantsView.UserId.CellAttributes)>
<span id="el_Participants_UserId">
<span @Html.Raw(participantsView.UserId.ViewAttributes)>
@Html.Raw(participantsView.UserId.GetViewValue())</span>
</span></td>
    </tr>
} @* participantsView.UserId.Visible (end) *@
@if (participantsView.AppointmentId.Visible) { // participantsView.AppointmentId.Visible (begin)
    <tr id="r_AppointmentId" @Html.Raw(participantsView.AppointmentId.RowAttributes)>
        <td class="@(participantsView.TableLeftColumnClass)"><span id="elh_Participants_AppointmentId">@Html.Raw(participantsView.AppointmentId.Caption)</span></td>
        <td data-name="AppointmentId" @Html.Raw(participantsView.AppointmentId.CellAttributes)>
<span id="el_Participants_AppointmentId">
<span @Html.Raw(participantsView.AppointmentId.ViewAttributes)>
@Html.Raw(participantsView.AppointmentId.GetViewValue())</span>
</span></td>
    </tr>
} @* participantsView.AppointmentId.Visible (end) *@
@if (participantsView.Status.Visible) { // participantsView.Status.Visible (begin)
    <tr id="r_Status" @Html.Raw(participantsView.Status.RowAttributes)>
        <td class="@(participantsView.TableLeftColumnClass)"><span id="elh_Participants_Status">@Html.Raw(participantsView.Status.Caption)</span></td>
        <td data-name="Status" @Html.Raw(participantsView.Status.CellAttributes)>
<span id="el_Participants_Status">
<span @Html.Raw(participantsView.Status.ViewAttributes)>
@Html.Raw(participantsView.Status.GetViewValue())</span>
</span></td>
    </tr>
} @* participantsView.Status.Visible (end) *@
</table>
@{ participantsView.CloseRecordset(); }
</form>
</main>
@participantsView.ShowPageFooter()
@Html.Raw(GetDebugMessage())
@ElapsedTime()
@if (!participantsView.IsExport()) {
<script>
loadjs.ready("load", function() {
    // Write your table-specific startup script here
    // document.write("page loaded");
});
</script>
}
